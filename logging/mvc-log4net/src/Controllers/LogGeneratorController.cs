using mvc_log4net.Utilities;
using System;
using System.Threading.Tasks;
using System.Web.Mvc;

namespace mvc_log4net.Controllers
{
    public class LogGeneratorController : Controller
    {
        //parameters
        int numOfEntriesToGenerate = 10;
        int logEntryFrequencyInSeconds = 5;

        // GET: LogGenerator
        public ActionResult Index()
        {
            Task.Run(() => LogLooper(numOfEntriesToGenerate, logEntryFrequencyInSeconds));
            return View();
        }

        // GET: LogGenerator
        [HttpGet]
        public ActionResult Index(int? numOfEntries, int? frequency)
        {
            numOfEntriesToGenerate = numOfEntries ?? numOfEntriesToGenerate;
            logEntryFrequencyInSeconds = frequency ?? logEntryFrequencyInSeconds;
            Task.Run(() => LogLooper(numOfEntriesToGenerate, logEntryFrequencyInSeconds));
            return View(new { NumberOfEntries = numOfEntriesToGenerate, LogFrequency = logEntryFrequencyInSeconds });
        }

        public int NumberOfEntries { get => numOfEntriesToGenerate; }
        public int LogFrequency { get => logEntryFrequencyInSeconds; }

        // generate logs
        private void LogLooper(int numOfEntries, int frequency)
        {
            for (int i = 0; i < numOfEntries; i++)
            {
                Log.Info($"generated by {this.ToString()} at {DateTime.Now}");
            }
        }

        // GET: LogGenerator/Details/5
        public ActionResult Details(int id)
        {
            return View();
        }

        // GET: LogGenerator/Create
        public ActionResult Create()
        {
            return View();
        }

        // POST: LogGenerator/Create
        [HttpPost]
        public ActionResult Create(FormCollection collection)
        {
            try
            {
                // TODO: Add insert logic here

                return RedirectToAction("Index");
            }
            catch
            {
                return View();
            }
        }
    }
}
